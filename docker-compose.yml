version: "3.8"
services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    image: myproject_app
    container_name: myproject_app
    restart: unless-stopped
    working_dir: /var/www/backend
    volumes:
      - ./backend:/var/www/backend
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
    depends_on:
      - mysql
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_URL=http://localhost:8000
      - DB_HOST=mysql
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
    networks:
      - app-network

  nginx:
    image: nginx:stable
    container_name: myproject_nginx
    restart: unless-stopped
    ports:
      - "8000:80"    # Laravel via nginx
      - "3000:3000"  # optional: frontend built static assets served via nginx
    volumes:
      - ./:/var/www:cached
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: myproject_mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootsecret
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network

  node:
    image: node:20-alpine
    container_name: myproject_node
    working_dir: /var/www/frontend
    volumes:
      - ./frontend:/var/www/frontend
      - /var/www/frontend/node_modules
    ports:
      - "5173:5173"
    command: ["sh", "-c", "npm install && npm run dev -- --host 0.0.0.0"]
    networks:
      - app-network

volumes:
  dbdata:

networks:
  app-network:
    driver: bridge
